	name:NegativeDivision
	in
	out
-1
	stax
U2/
	name:NegativeMod
	in
	out
1
	stax
U2%
	name:RegexReplaceIndex
	in
	out
01
	stax
'x'x+ 'x {i$} R
	name:EmptyTranspose
	in
	out
1
	stax
1p zMp
	name:StringArrayDiff
	in
	out
0
	stax
"abc"] "abc"] |^ %
	name:ZeroFillNumber
	in
	out
06
	stax
6 2 |z
	name:UnfoundMulticharSubstringIndex
	in
	out
-1
	stax
"abc" "xy" I
	name:UnfoundMulticharSubstringOverlap
	in
	out
-1
	stax
"abc" "cd" I
	name:TooMuchTrim
	in
	out

	stax
'a 3t
	name:ShorthandLoopIndex
	in
	out
0101
	stax
2F2Fip
	name:CompressedInBlock
	in
	out
Thg
	stax
1{`N`F
	name:MixedEqualityEmpty
	in
	out
0
	stax
z 1 =
	name:NegativeEval
	in
	out
-1
	stax
U$e
	name:ScopeElementTest
	in
	out
12
	stax
2R{d 9R{dF _pF
	name:ScopeIndexTest
	in
	out
01
	stax
2R{d 9R{dF ipF
	name:RotateStringsTest
	in
	out
a
	stax
'a'bL|) h
	name:NegativeHalfTest
	in
	out
-1
	stax
Uh
	name:SingletonReduce
	in
	out
1
	stax
1{*k
	name:BatchedSubarrays
	in
	out
abcd
	stax
'a'b"cd"3l 3Bm
	name:MultiDigitIntPartFloat
	in
	out
12.345
	stax
12!345
	name:RationalSqrt
	in
	out
0.707106781186548
	stax
2u|Q
	name:IntRationalCompare
	in
	out
1
	stax
01u<
	name:RationalIntCompare
	in
	out
1
	stax
1u0>
	name:BlockCompressNestParse
	in
	out
a
	stax
1{`m`'am
	name:TerminatedStringEndTest
	in
	out
x
	stax
1m"x"
	name:RationalToString
	in
	out
1/2
	stax
2u$
	name:TwoCharBlockParsing
	in
	out
md
	stax
1{.mdm
	name:SurrogatePairParse
	in
𒀠
	out
1
	stax
%
	name:SurrogatePairOut
	in
	out
𒀠
	stax
73760]
	name:EvalFirstLine
	in
3
4
	out
444
	stax
e*
	name:ClosingBraceInput
	in
]
	out
]
	stax

	name:OpenBraceInput
	in
[
	out
[
	stax

	name:ScalarEmptyZipRep
	in
	out

	stax
z5\
5z\
	name:ArithmeticCoerce
	in
1.5 2
	out
3
	stax
*
	in
1.5 2
	out
3.5
	stax
+
	in
1.5 2
	out
-0.5
	stax
-
	in
1.5 2
	out
0.75
	stax
/
	name:Leading0FloatLiteral
	in
	out
0.5
	stax
0!5
	name:PostPopGenerator
	in
10
	out
1
4
9
6
5
	stax
0gU^cJx%
	name:ShorthandMapInForeach
	in
	out
1
1
2
1
2
3
	stax
3R|[Fm
	name:SetIntersectSubstrings
	in
	out
abc
	stax
Va|[ "abc"] |&
	name:DoubleImplicitRangeCrossMap
	in
2 2
	out
23
34
	stax
K+$
	name:AdjacentFractionParseError
	in
3 1/3
	out
1/3
	stax
"noop"d
	name:VerbatimCount
	in
[[1 0]] [1 1]
	out
0
	stax
|#
	name:CrossmapIterator
	in
[1] [2]
	out
1 2
	stax
{dd_\K hhJ
	name:ReduceIteratorMutation
	in
	out
123
	stax
3R]F{+k_$
	name:FloatDouble
	in
1.5
	out
3
	stax
H
	name:CancelFilter
	in
[1 0]
	out
0
	stax
f C 1
	name:EmptySum
	in
[]
	out
0
	stax
|+
	name:BadPermutation
	in
	out
1 2 3
1 3 2
2 1 3
2 3 1
3 1 2
3 2 1
	stax
3R|TmJ
	name:BaseConvertAutoSpace
	in
17
	out
17
	stax
:B:b
	name:StringSetSubtract
	in
["a" "b"]
	out
b
	stax
'a-
	name:IndexInFindAllIndexMatch
	in
[9 8 2 3 7]
	out
2 3
	stax
{i=}|IJ
	in
6
	out
2
4
6
	stax
f|e
	name:PrefixSumsStackDebris
	in
	out
foo
	stax
"foo" 3R:+d
	name:EmptyElementStringJoin
	in
	out
x
	stax
z]2*'x*
	name:OrderByArrayProjection
	in
foo
bar
BAZ
	out
bar
BAZ
foo
	stax
L {^o m
	name:WhileIndex
	in
3
	out
2
	stax
{vci~wd
{vi~|cW
	name:NumberInCompressedLiteral
	out
z
	stax
`0`
	name:EvalMinusFloats
	in
-1.5
	out
-2.5
	stax
v
	in
[0,-0.5]
	out
0
-0.5
	stax
m
	name:RawInputString
	in
ab
cd
	out
ab
cd
	stax
_
	name:NakedLoops
	out
foo
	stax
W"foo"1C
w"foo"0
	name:NearPrime
	out
foo
	stax
8 :P "foo"
8 :p "foo"
	name:TransposeMutation
	in
[[1 2][3]]
	out
1 2
3
	stax
cMdmJ
	name:EmptyProduct
	out
1
	stax
z:*
	name:PowersetStackOverflow
	out
262143
	stax
18RS%
	name:MalformedInputString
	in
"a
	out
2
	stax
%
	name:ScalarGeneratorPush
	out
-1
	stax
GU}2AgeEFJ+
	name:DoubleGoto
	out
22
	stax
11G}22G}33d
	name:CommentParsing
	out
1
	stax
1 	2
	name:GridEmbedMutation
	out
====
=ab=
=cd=
====
	stax
"===="]4*1c"abcd"2/||m
	name:ZeroDivideAll
	in
0 3
	out
0
	stax
|/
	name:ZeroLCM
	in
0 3
3 0
0 0
	out
0
0
0
	stax
me|l
	name:LCMFromInput
	in
3 4
	out
12
	stax
|l
	name:NormalizedFraction
	out
-1/2
	stax
2Nu
	name:NegativeFractionMod
	in
5/4 -1/3
	out
1/4
	stax
%
	name:PermutationIndexOverflow
	out
380
	stax
VA20(2|T%
	name:AssignIndexMutation
	in
["ab","cd"]
	out
xbcd
abcd
	stax
c00'x&PP
	name:RegexBlockReplaceBoundary
	in
foo bar
	out
Foo Bar
	stax
"\b."{^}R
	name:DefaultGeneratorSuccessor
	out
0
1
2
	stax
03gn 
	name:PackedTrailingSpace
	out
foo bar
	stax
æx«⌡√Ç^ô◘╓╬¼'
	name:MultiplicityStack
	in
	out
3
	stax
"under"8 2:/
	in
"foo" 8 2
	out
3
	stax
:/
	name:AccurateLog
	in
100 10
1000 10
10000 10
1000000 1000
	out
2
3
4
2
	stax
me|L@
	name:RoundZero
	in
0.0
	out
0.00
	stax
2j
	name:NegativeArrayMultiplicationMutation
	in
-2 "foo"
	out
oofoof
foo
	stax
b*PP
	name:EmptyExcerpts
	out

	stax
z:e
	name:EmptyPartitions
	out

	stax
z:!
	name:IntCompareAccuracy
	out
1
	stax
12345678901234567890 12345678901234567891 <
	name:SuppressAutoEval
	in
"foo"
	out
"foo"
	stax
 iP
	name:RotateEmpty
	out
0
	stax
z|(%
z2|(%
z|)%
z2|)%
	name:NoOpReallyPushesToMain
	in
7
	out
7
	stax
+ 13~
* 13~
t 13~
T 13~
S 13~
I 13~
M 13~
	name:MultiSetIntersectMutation
	out
ab
	stax
.ab .bc n|bd
	name:InfiniteMultiplicity
	out
∞
	stax
01:/
	name:UnmatchedRegexSplitCaptureGroup
	in
as-dxf-xgh
	out
as dxf x gh
	stax
"-(x)?"|sJ
	name:ImplicitGeneratorSuccessorWithCallTarget
	out
0
1
2
	stax
0g3}L
	name:LiteralBackslashSuffix
	in
"back\\slash" 
	out
back\slash
	in
"back\\slash\\" 
	out
back\slash\
	in
"\\/\\" 
	out
\/\
	stax
,
	name:ApproximateSqrt
	in
9999999999999999
	out
9999999999999999
	stax
J|q
	out
201
	stax
400|A|q$%
	in
8
	out
2
	stax
|q
	name:LastIndexOfOnLastIndex
	in
f
asdfasdf
	out
7
	stax
|~
	name:MultisetXorMutates
	out
9
	stax
9]cc|ndJ
	name:EmptyZip
	in
"foo" []
	out
0
	in
[] "foo"
	out
0
	stax
\%
	name:ZeroWidthRegexBlockReplace
	in
foo
	out
-f-o-o-
	stax
z{'-+}R
	name:FloatFormat
	in
1.0020841800044864e-292
1.01
	out
1.00208418000449E-292
1.01
	stax
me
	name:BlockBlockFor
	in
thx Razetime
	out
101
	stax
{{}{}F