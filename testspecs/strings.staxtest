	name:Literals
	in
	out
asdf
	stax
"asdf"
	out
as
df
	stax
"as`1df"
	out
as"df
	stax
"as`"df"
	out
0 10 9 13 11 12
	stax
"`0`1`2`3`4`5"J
	name:CharacterInterleave
	in
abcd
	out
a-b-c-d
	stax
M '- *
	name:Upper
	in
	out
HELLO
	stax
"Hello"^
	name:Lower
	in
	out
hello
	stax
"Hello"v
	name:TruncateRight
	in
	out
Hel
	stax
"Hello" 3(
	name:PadRight
	in
Hello
	out
Hello   
	stax
8(
	in
"xxx" "yyyyy"
	out
xxxyy
	stax
(
	in
abc
	out
ab
	stax
U(
	name:TruncateLeft
	in
Hello
	out
llo
	stax
3)
	name:PadLeft
	in
Hello
	out
   Hello
	stax
8)
	in
"xxx" "yyyyy"
	out
yyxxx
	stax
)
	in
abc
	out
bc
	stax
U)
	name:FindIndex
	in
	out
6
	stax
"Hello World" "Wo" I
	name:FindLastIndex
	in
foo bar foo baz asdf foo zxcv
	out
21
	in
sadf sdfjlk;sdfjk lsadfkjl fsad
	out
-1
	stax
"foo" |~
	name:FindAllIndexes
	in
	out
4 7
	stax
"Hello World" "o" |I J
	name:UnfoundIndex
	in
	out
-1
	stax
"Hello World" "Wr" I
	in
abc
	out
-1
	stax
'dI
	name:ChunkString
	in
abcdefgh
	out
abc,def,gh
	stax
3/ ',*
	in
abcdefgh
	out
hgf,edc,ba
	stax
3N/ ',*
	in
abcdefgh
	out
0
	stax
0/%
	name:MultichunkString
	in
abcdefgh
	out
a bc d ef g h
	stax
2R |/ J
	name:Transpose
	in
	out
adg,beh,cf 
	stax
"abcdefgh" 3/ M ',*
	name:TransposeFills
	in
["long" "x" "longer"]
	out
lxl,o o,n n,g g,  e,  r
	stax
M ', *
	name:TrimLeft
	in
	out
abc  
	stax
"  abc  " t
	name:TrimRight
	in
	out
  abc
	stax
"  abc  " T
	name:TrimLeftBy
	in
	out
llo world
	stax
"hello world" 2 t
	name:TrimRightBy
	in
	out
hello wor
	stax
"hello world" 2 T
	name:Unique
	in
	out
Helo Wrd
	stax
"Hello World" u
	name:RegexReplace
	in
	out
azbzczd
	stax
"axbxxcxxxd" "x+" 'z R
	in
x xxx asdf xxxx
	out
1 3 asdf 4
	stax
.x+ {%} R
	name:Translate
	in
	out
H3ll0 W0rld
	stax
"Hello World" "e3o0" |t
	name:Batch
	in
	out
hel,ell,llo
	stax
"hello" 3B ',*
	name:RotateRight
	in
	out
gasdf
	stax
"asdfg" |)
	name:RotateRightDistance
	in
	out
fgasd
	stax
"asdfg" 2 |)
	name:RotateLeft
	in
	out
sdfga
	stax
"asdfg" |(
	name:RotateLeftDistance
	in
	out
dfgas
	stax
"asdfg" 2 |(
	name:RegexFind
	in
	out
o,oo,o,o
	stax
"Hello. Good to see you." "o+" |f ', *
	name:RegexSplit
	in
	out
Hell,. G,d t, see y,u.
	stax
"Hello. Good to see you." "o+" |s ', *
	name:Prefixes
	in
	out
a,ab,abc
	stax
"abc" |[ ',*
	name:Suffixes
	in
	out
abc,bc,c
	stax
"abc" |] ',*
	name:ZeroFill
	in
	out
00abc
	stax
"abc" 5 |z
	name:CompressedLiterals
	in
	out
literal
	stax
`5Is1%
	name:SubstringOccurrences
	in
	out
2
	stax
"drab cab" "ab" #
	name:AutoRangeBounds
	in
	out
as//
	stax
"asdf"X 2x|r '/ &
	name:StringReplace
	in
	out
axbxc
	stax
 "a.b.c" '. 'x :r
	name:StartsWith
	in
Hello world
	out
1
	stax
"He" :[
	name:NotStartsWith
	in
Hello world
	out
0
	stax
"e" :[
	name:EndsWith
	in
Hello world
	out
1
	stax
"rld" :]
	name:NotEndsWith
	in
Hello world
	out
0
	stax
"rld!" :]
	name:Center
	in
	out
  a  
	stax
'a 5 |C
	name:CenterBlock
	in
abcd
	out
 a  , ab ,abc ,abcd
	stax
|[ |C ',*
	name:StringLiteral
	in
	out
hello
	stax
"hello"
	name:UnterminatedStringLiteral
	in
	out
hello
	stax
"hello
	name:EscapedString
	in
	out
a"b`c
	stax
"a`"b``c
	name:Concat
	in
	out
helloworld
	stax
"hello" "world"+
	name:RepeatString
	in
	out
abcabcabcabc
	stax
"abc"4*
	name:StringSubtraction
	in
	out
he wrd
	stax
"hello world" "ol" -
	name:StringJoin
	in
	out
d-c-b-a
	stax
'a'b'c'd L '-*
	name:TwoCharLiteral
	in
	out
abcd
	stax
.ab.cd +
	name:Char
	in
	out
a
	stax
'a
	name:Rot13
	in
Hello, world.
	out
Uryyb, jbeyq.
	stax
:3
	name:Rot-n
	in
"abc, XYZ." 1
	out
bcd, YZA.
	stax
:3
	name:RingTranslate
	in
Hello, world.
	out
Hfmmp, xpsme.
	stax
Va :t
	name:LeftAlign
	in
foo
baaaaaar
	out
foo     
baaaaaar
	stax
L|<m
	name:RightAlign
	in
foo
baaaaaar
	out
     foo
baaaaaar
	stax
L|>m
	name:ContiguousExcerpts
	in
abc
	out
a
ab
abc
b
bc
c
	stax
:e m
	name:BracketMirror
	in
hello (<[{/
	out
\}]>) olleh
	stax
:R
	name:ReplaceFirst
	in
"foo bar baz foo bar baz" "bar" "***"
	out
foo *** baz foo bar baz
	stax
|e
	name:RegexMatchIndices
	in
That wo thecom I hannexambdateade offxPa
	out
19 35
	stax
"(.)\1" |q J
	name:StringTemplates
	in
5 6 "bill"
	out
Hello, bill.  It's -6 of one, and 6 of the other.
	stax
"Hello, ` .  It's `N of one, and `^ of the other.
	in
bill
	out
Hello bill. Vowels are aeiou.
	stax
"Hello ` . Vowels are `Vv.
	name:SplitOnce
	in
cd
abcdefgh
	out
efgh
ab
	in
xxx
abcdefgh
	out

abcdefgh
	stax
:/ PP
	name:TrimStart
	in
ab
ababcabcdefef
	out
cabcdefef
	stax
|w
	name:TrimEnd
	in
ef
abefcabcdefef
	out
abefcabcd
	stax
|W
	name:AsciiMirror
	in
a(/b
	out
a(/bb\)a
	stax
:W
	name:AsciiPalindormize
	in
a(/b
	out
a(/b\)a
	stax
:w
	name:EmbedGrid
	in
Have you ever noticed that software is just too big? 
Hello world mobile apps are tens of megabytes. 
Websites are making hundreds of requests for a single page. 
There's just too much stuff. 
Stax is the answer! 
Unfortunately, it's the answer to another question.
	out
Have you ever noticed that software is just too big? 
Hello world mobile apps are tens of megabytes. 
Websites are making hundreds of rXXuests for a single page. 
There's just too much stuff.     XX
Stax is the answer!              XX
Unfortunately, it's the answer toXXnother question.
                                 XX
	stax
L 2 33 'XA*2/ || m
	name:TitleCase
	in
foO BaR 123
	out
Foo Bar 123
	stax
:.
	in
foO BaR 123
ding dong
	out
Foo Bar 123
Ding Dong
	stax
_:.
	name:ToggleCase
	in
foO BaR 123
	out
FOo bAr 123
	stax
:~
	name:RegexIsMatch
	in
abcd9
	out
0
	in
abcd
	out
1
	stax
"[a-z]+" |Q
	in
aba
	out
1
	stax
"(a)b\1" |Q
	in
fizz buzzz
	out
zz zzz
	stax
.z+ |F J
	name:Parenthesize
	in
012
	out
(12)
	in
foo
	out
(foo)
	stax
:{
	name:Bracercise
	in
012
	out
[12]
	in
foo
	out
[foo]
	stax
:}
	name:Taggerize
	in
fieldset
	out
<fieldset>
	stax
:h
	name:TrimBoth
	in
xxasdfgx
	out
asdfg
	stax
'x :D
	in
xxasdfgx
	out
asdfg
	stax
'xh :D
	name:SpaceJoinCodepoint
	out
1
0
2
	stax
2RMJm
	name:SurrogatePairs
	out
üçπ1
	stax
.üçπ1
	out
üçπ
	stax
'üçπ
	name:SetCase
	in
"fOo" 0
	out
FOO
	in
"fOo" 1
	out
foo
	stax
:c
	name:RegexEscape
	out
 !"#\$%&'\(\)\*\+,-\./0123456789:;<=>\?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\[\\\]\^_`abcdefghijklmnopqrstuvwxyz\{\|\}~
	stax
Vp:x
	name:Utf8
	in
üçπstaxüçπ
	out
240 159 141 185 115 116 97 120 240 159 141 185
üçπstaxüçπ
	stax
|kcJP|KP